<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>backup on Ben's Blog</title><link>https://bensyz.github.io/blog/tags/backup/</link><description>Recent content in backup on Ben's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 27 May 2025 16:02:47 +0800</lastBuildDate><atom:link href="https://bensyz.github.io/blog/tags/backup/index.xml" rel="self" type="application/rss+xml"/><item><title>Gerrit Replication</title><link>https://bensyz.github.io/blog/blogs/gerrit_replication/</link><pubDate>Tue, 27 May 2025 16:02:47 +0800</pubDate><guid>https://bensyz.github.io/blog/blogs/gerrit_replication/</guid><description>&lt;p>[toc]&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>&lt;a href="https://gerrit.googlesource.com/plugins/replication/+doc/master/src/main/resources/Documentation/config.md">Gerrit 官方文档&lt;/a>&lt;/p>
&lt;p>&lt;code>replication&lt;/code> 是 Gerrit 提供的插件：当“主服务器”中的相关仓库更新时，会自动同步到“从服务器”，因而可以实现备份，只允许单向流动。它的实现是：用本地的 Unix 帐号，通过 git 向其他服务器 push “本地 Gerrit 工作目录下 git 子目录下的目录仓库”。&lt;/p>
&lt;p>&lt;strong>注意&lt;/strong>：&lt;/p>
&lt;p>&lt;code>replication&lt;/code> 的执行和 Gerrit 软件提供的 git 账户没有关系：&lt;/p>
&lt;ul>
&lt;li>master 端：它不是用 Gerrit 内部的用户来推送到远端的，而是用“启动 Gerrit 软件的 &lt;strong>本地帐号&lt;/strong>”&lt;/li>
&lt;li>slave 端：接收不是走 Gerrit 开放的 ssh 端口。而是走“本地账户”的 ssh 端口（不全对，可以参考 replication 后记）&lt;/li>
&lt;/ul>
&lt;p>由于我希望 slave 端接收到从 master 传过来的 git 后，亦能提供 clone fetch 等只读的服务。而这些服务是受限的，权限信息都在 All-Projects.git, All-Users.git 这两个仓库下，最简单的办法就是 slave 端也用 Gerrit 来发布，以避免权限转化和不统一。同时我还要配置 slave 端设成只读。&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;h3 id="启动两个-docker">启动两个 docker&lt;/h3>
&lt;p>启动两个 docker&lt;/p>
&lt;div class="sourceCode" id="cb1">&lt;pre class="sourceCode yaml">&lt;code class="sourceCode yaml">&lt;span id="cb1-1">&lt;a href="#cb1-1" aria-hidden="true">&lt;/a>&lt;span class="co"># docker-compose.yaml&lt;/span>&lt;/span>
&lt;span id="cb1-2">&lt;a href="#cb1-2" aria-hidden="true">&lt;/a>&lt;span class="fu">version&lt;/span>&lt;span class="kw">:&lt;/span>&lt;span class="at"> &lt;/span>&lt;span class="st">&amp;#39;3&amp;#39;&lt;/span>&lt;/span>
&lt;span id="cb1-3">&lt;a href="#cb1-3" aria-hidden="true">&lt;/a>&lt;/span>
&lt;span id="cb1-4">&lt;a href="#cb1-4" aria-hidden="true">&lt;/a>&lt;span class="fu">services&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-5">&lt;a href="#cb1-5" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">gerrit-1&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-6">&lt;a href="#cb1-6" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">image&lt;/span>&lt;span class="kw">:&lt;/span>&lt;span class="at"> gerritcodereview/gerrit:3.4.0&lt;/span>&lt;/span>
&lt;span id="cb1-7">&lt;a href="#cb1-7" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">hostname&lt;/span>&lt;span class="kw">:&lt;/span>&lt;span class="at"> gerrit-1&lt;/span>&lt;/span>
&lt;span id="cb1-8">&lt;a href="#cb1-8" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volumes&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-9">&lt;a href="#cb1-9" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> volume-git-1:/var/gerrit/git&lt;/span>&lt;/span>
&lt;span id="cb1-10">&lt;a href="#cb1-10" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> volume-index-1:/var/gerrit/index&lt;/span>&lt;/span>
&lt;span id="cb1-11">&lt;a href="#cb1-11" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> volume-cache-1:/var/gerrit/cache&lt;/span>&lt;/span>
&lt;span id="cb1-12">&lt;a href="#cb1-12" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">ports&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-13">&lt;a href="#cb1-13" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> &lt;/span>&lt;span class="st">&amp;quot;29418:29418&amp;quot;&lt;/span>&lt;/span>
&lt;span id="cb1-14">&lt;a href="#cb1-14" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> &lt;/span>&lt;span class="st">&amp;quot;18080:8080&amp;quot;&lt;/span>&lt;/span>
&lt;span id="cb1-15">&lt;a href="#cb1-15" aria-hidden="true">&lt;/a>&lt;/span>
&lt;span id="cb1-16">&lt;a href="#cb1-16" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">gerrit-2&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-17">&lt;a href="#cb1-17" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">image&lt;/span>&lt;span class="kw">:&lt;/span>&lt;span class="at"> gerritcodereview/gerrit:3.4.0&lt;/span>&lt;/span>
&lt;span id="cb1-18">&lt;a href="#cb1-18" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">hostname&lt;/span>&lt;span class="kw">:&lt;/span>&lt;span class="at"> gerrit-2&lt;/span>&lt;/span>
&lt;span id="cb1-19">&lt;a href="#cb1-19" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volumes&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-20">&lt;a href="#cb1-20" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> volume-git-2:/var/gerrit/git&lt;/span>&lt;/span>
&lt;span id="cb1-21">&lt;a href="#cb1-21" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> volume-index-2:/var/gerrit/index&lt;/span>&lt;/span>
&lt;span id="cb1-22">&lt;a href="#cb1-22" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> volume-cache-2:/var/gerrit/cache&lt;/span>&lt;/span>
&lt;span id="cb1-23">&lt;a href="#cb1-23" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">ports&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-24">&lt;a href="#cb1-24" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> &lt;/span>&lt;span class="st">&amp;quot;29419:29418&amp;quot;&lt;/span>&lt;/span>
&lt;span id="cb1-25">&lt;a href="#cb1-25" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="kw">-&lt;/span>&lt;span class="at"> &lt;/span>&lt;span class="st">&amp;quot;22001:22&amp;quot;&lt;/span>&lt;/span>
&lt;span id="cb1-26">&lt;a href="#cb1-26" aria-hidden="true">&lt;/a>&lt;span class="co"> # - &amp;quot;18081:8080&amp;quot; # 由于我们将其配置成 replica，网页端口是无用的&lt;/span>&lt;/span>
&lt;span id="cb1-27">&lt;a href="#cb1-27" aria-hidden="true">&lt;/a>&lt;/span>
&lt;span id="cb1-28">&lt;a href="#cb1-28" aria-hidden="true">&lt;/a>&lt;span class="fu">volumes&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-29">&lt;a href="#cb1-29" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volume-git-1&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-30">&lt;a href="#cb1-30" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volume-index-1&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-31">&lt;a href="#cb1-31" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volume-cache-1&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-32">&lt;a href="#cb1-32" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volume-git-2&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-33">&lt;a href="#cb1-33" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volume-index-2&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>
&lt;span id="cb1-34">&lt;a href="#cb1-34" aria-hidden="true">&lt;/a>&lt;span class="at"> &lt;/span>&lt;span class="fu">volume-cache-2&lt;/span>&lt;span class="kw">:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="sourceCode" id="cb2">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb2-1">&lt;a href="#cb2-1" aria-hidden="true">&lt;/a>&lt;span class="ex">docker&lt;/span> compose up&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Gerrit docker 中的 site_path 在 &lt;code>/var/gerrit/&lt;/code>，同时家目录也设置成了这个。&lt;/p>
&lt;h3 id="slave-机的配置">slave 机的配置&lt;/h3>
&lt;h4 id="安装配置-sshd">安装配置 &lt;code>sshd&lt;/code>&lt;/h4>
&lt;h5 id="进入-slave-gerrit-2">进入 slave Gerrit 2&lt;/h5>
&lt;p>对 slave 机器的配置，除特殊说明外均需要 root 权限。&lt;/p>
&lt;div class="sourceCode" id="cb3">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb3-1">&lt;a href="#cb3-1" aria-hidden="true">&lt;/a>&lt;span class="ex">docker&lt;/span> exec --user root -it gerrit-gerrit-2-1 /bin/bash&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h5 id="替换-centos-源">替换 &lt;code>CentOS&lt;/code> 源&lt;/h5>
&lt;p>由于我用的是 &lt;code>gerrit:3.4.0&lt;/code> 需要替换一下源&lt;/p>
&lt;div class="sourceCode" id="cb4">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb4-1">&lt;a href="#cb4-1" aria-hidden="true">&lt;/a>&lt;span class="co"># https://serverfault.com/questions/1161816/mirrorlist-centos-org-no-longer-resolve&lt;/span>&lt;/span>
&lt;span id="cb4-2">&lt;a href="#cb4-2" aria-hidden="true">&lt;/a>&lt;span class="fu">sed&lt;/span> -i &lt;span class="st">&amp;#39;s/mirror.centos.org/vault.centos.org/g&amp;#39;&lt;/span> /etc/yum.repos.d/CentOS-*.repo&lt;/span>
&lt;span id="cb4-3">&lt;a href="#cb4-3" aria-hidden="true">&lt;/a>&lt;span class="fu">sed&lt;/span> -i &lt;span class="st">&amp;#39;s/^#.*baseurl=http/baseurl=http/g&amp;#39;&lt;/span> /etc/yum.repos.d/CentOS-*.repo&lt;/span>
&lt;span id="cb4-4">&lt;a href="#cb4-4" aria-hidden="true">&lt;/a>&lt;span class="fu">sed&lt;/span> -i &lt;span class="st">&amp;#39;s/^mirrorlist=http/#mirrorlist=http/g&amp;#39;&lt;/span> /etc/yum.repos.d/CentOS-*.repo&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h5 id="安装-openssh-server-和-passwd">安装 &lt;code>openssh-server&lt;/code> 和 &lt;code>passwd&lt;/code>&lt;/h5>
&lt;div class="sourceCode" id="cb5">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb5-1">&lt;a href="#cb5-1" aria-hidden="true">&lt;/a>&lt;span class="ex">yum&lt;/span> install -y openssh-server passwd&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h5 id="配置密码">配置密码&lt;/h5>
&lt;div class="sourceCode" id="cb6">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb6-1">&lt;a href="#cb6-1" aria-hidden="true">&lt;/a>&lt;span class="co"># 密码自定义&lt;/span>&lt;/span>
&lt;span id="cb6-2">&lt;a href="#cb6-2" aria-hidden="true">&lt;/a>&lt;span class="va">password=&lt;/span>&lt;span class="st">&amp;quot;&amp;lt;gerrit_password&amp;gt;&amp;quot;&lt;/span>&lt;/span>
&lt;span id="cb6-3">&lt;a href="#cb6-3" aria-hidden="true">&lt;/a>&lt;span class="bu">echo&lt;/span> &lt;span class="st">&amp;quot;&lt;/span>&lt;span class="va">$password&lt;/span>&lt;span class="st">&amp;quot;&lt;/span> &lt;span class="kw">|&lt;/span> &lt;span class="fu">passwd&lt;/span> --stdin -f gerrit&lt;/span>
&lt;span id="cb6-4">&lt;a href="#cb6-4" aria-hidden="true">&lt;/a>&lt;span class="co"># 要删除这个文件，否则 ssh 连上来会报 System is booting up. Unprivileged users are not permitted to log in yet&lt;/span>&lt;/span>
&lt;span id="cb6-5">&lt;a href="#cb6-5" aria-hidden="true">&lt;/a>&lt;span class="co"># https://unix.stackexchange.com/a/487937/442345&lt;/span>&lt;/span>
&lt;span id="cb6-6">&lt;a href="#cb6-6" aria-hidden="true">&lt;/a>&lt;span class="fu">rm&lt;/span> -f /run/nologin&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h5 id="配置-sshd">配置 &lt;code>sshd&lt;/code>&lt;/h5>
&lt;p>Gerrit docker 的入口是 &lt;code>/entrypoint.sh&lt;/code>，由于是使用 &lt;code>gerrit&lt;/code> 用户启动这个脚本的，所以我们不能用 root 的 &lt;code>sshd&lt;/code> 来启动，所以有两种方案：&lt;/p>
&lt;h6 id="方案一-将配置文件的所有权归属给-gerrit">方案一： 将配置文件的所有权归属给 &lt;code>gerrit&lt;/code>&lt;/h6>
&lt;p>由于我们使用的是 docker，故我们可以直接修改默认的 &lt;code>sshd&lt;/code> 的 host keys&lt;/p>
&lt;div class="sourceCode" id="cb7">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb7-1">&lt;a href="#cb7-1" aria-hidden="true">&lt;/a>&lt;span class="fu">ssh-keygen&lt;/span> -A&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="sourceCode" id="cb8">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb8-1">&lt;a href="#cb8-1" aria-hidden="true">&lt;/a>&lt;span class="fu">chown&lt;/span> gerrit:gerrit /etc/ssh/sshd_config&lt;/span>
&lt;span id="cb8-2">&lt;a href="#cb8-2" aria-hidden="true">&lt;/a>&lt;span class="fu">chown&lt;/span> gerrit:gerrit /etc/ssh/ssh_host*&lt;/span>
&lt;span id="cb8-3">&lt;a href="#cb8-3" aria-hidden="true">&lt;/a>&lt;span class="co"># 修改 /etc/ssh/sshd_config 的端口、登录选项等信息（建议在配置完成密钥之后关闭密码登录）&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>在 &lt;code>/entrypoint.sh&lt;/code> 的最上面添加 &lt;code>/usr/sbin/sshd&lt;/code>，在重启 docker 的时候会生效。&lt;/p>
&lt;h6 id="方案二gerrit-启动自己的-sshd-使用自己的-sshd_config">方案二：&lt;code>gerrit&lt;/code> 启动自己的 sshd 使用自己的 &lt;code>sshd_config&lt;/code>&lt;/h6>
&lt;p>当我们安装 Gerrit 在物理机器上时，可以由 &lt;code>gerrit&lt;/code> 用户自己启动一个 &lt;code>sshd&lt;/code>，&lt;/p>
&lt;div class="sourceCode" id="cb9">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb9-1">&lt;a href="#cb9-1" aria-hidden="true">&lt;/a>&lt;span class="fu">su&lt;/span> gerrit &lt;span class="co"># 切换到 gerrit 用户&lt;/span>&lt;/span>
&lt;span id="cb9-2">&lt;a href="#cb9-2" aria-hidden="true">&lt;/a>&lt;span class="fu">mkdir&lt;/span> -p ~/.ssh/etc/ssh&lt;/span>
&lt;span id="cb9-3">&lt;a href="#cb9-3" aria-hidden="true">&lt;/a>&lt;span class="fu">ssh-keygen&lt;/span> -A -f ~/.ssh&lt;/span>
&lt;span id="cb9-4">&lt;a href="#cb9-4" aria-hidden="true">&lt;/a>&lt;span class="fu">mv&lt;/span> ~/.ssh/etc/ssh/sshd_host* ~/.ssh&lt;/span>
&lt;span id="cb9-5">&lt;a href="#cb9-5" aria-hidden="true">&lt;/a>&lt;span class="fu">rmdir&lt;/span> --ignore-fail-on-non-empty -p ~/.ssh/etc/ssh&lt;/span>
&lt;span id="cb9-6">&lt;a href="#cb9-6" aria-hidden="true">&lt;/a>&lt;span class="fu">cp&lt;/span> /etc/ssh/sshd_config ~/.ssh/sshd_config&lt;/span>
&lt;span id="cb9-7">&lt;a href="#cb9-7" aria-hidden="true">&lt;/a>&lt;span class="co"># 修改 ~/.ssh/sshd_config 的端口、登录选项等信息（建议在配置完成密钥之后关闭密码登录）&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>在 &lt;code>/entrypoint.sh&lt;/code> 的最上面添加： &lt;code>/usr/sbin/sshd -f /var/gerrit/.ssh/sshd_config&lt;/code>，在重启 docker 的时候会生效。&lt;/p>
&lt;h4 id="配置-replica">配置 replica&lt;/h4>
&lt;p>如果在 Slave 上用 Gerrit 提供服务，需要配置只读，只允许从 master 复制到 slave&lt;/p>
&lt;p>有两种方案，一种是配 &lt;a href="https://gerrit-review.googlesource.com/Documentation/config-gerrit.html#All-Projects-project.config">&lt;code>$site_path/etc/All-Projects/project.config&lt;/code>&lt;/a>，可以覆盖 All-Projects.git 中的配置信息，还有一种就是配置 &lt;a href="https://gerrit-review.googlesource.com/Documentation/config-gerrit.html#container.replica">&lt;code>$site_path/etc/gerrit.config&lt;/code>&lt;/a> 直接配置 replica，后者更合适。&lt;/p>
&lt;div class="sourceCode" id="cb10">&lt;pre class="sourceCode ini">&lt;code class="sourceCode ini">&lt;span id="cb10-1">&lt;a href="#cb10-1" aria-hidden="true">&lt;/a>&lt;span class="kw">[container]&lt;/span>&lt;/span>
&lt;span id="cb10-2">&lt;a href="#cb10-2" aria-hidden="true">&lt;/a>&lt;span class="dt"> replica &lt;/span>&lt;span class="ot">=&lt;/span>&lt;span class="st"> &lt;/span>&lt;span class="kw">true&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="sourceCode" id="cb11">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb11-1">&lt;a href="#cb11-1" aria-hidden="true">&lt;/a>&lt;span class="ex">docker&lt;/span> cp --archive gerrit-gerrit-2-1:/var/gerrit/etc/gerrit.config gerrit2.config&lt;/span>
&lt;span id="cb11-2">&lt;a href="#cb11-2" aria-hidden="true">&lt;/a>&lt;span class="ex">docker&lt;/span> cp --archive gerrit2.config gerrit-gerrit-2-1:/var/gerrit/etc/gerrit.config&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;ul>
&lt;li>Tips:&lt;/li>
&lt;/ul>
&lt;p>配置只读之后，ssh 的 &lt;code>gerrit query&lt;/code> 等 &lt;code>gerrit&lt;/code> 命令就没有了，网页也是 404 了。&lt;/p>
&lt;pre class="console">&lt;code>bash-4.4$ ssh -p 29419 admin@192.168.3.55 gerrit query status:open
fatal: gerrit: query: not found&lt;/code>&lt;/pre>
&lt;h4 id="移走或者删除-all-project.git-和-all-users.git">移走（或者删除） All-Project.git 和 All-Users.git&lt;/h4>
&lt;p>由于我们想做的是全量备份，这两个仓库直接用 master 的配置就好了，所以进入 &lt;code>$site_path/git&lt;/code>，将里面所有的仓库移到别处备份（明确的话也可以直接删除）。&lt;/p>
&lt;h4 id="重启-gerrit">重启 Gerrit&lt;/h4>
&lt;p>重启 Gerrit 以生效 &lt;code>/entrypoint.sh&lt;/code> 和 &lt;code>gerrit.config&lt;/code>&lt;/p>
&lt;div class="sourceCode" id="cb13">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb13-1">&lt;a href="#cb13-1" aria-hidden="true">&lt;/a>&lt;span class="ex">docker&lt;/span> restart gerrit-gerrit-2-1&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="master-机的配置">master 机的配置&lt;/h3>
&lt;p>参考 &lt;a href="https://gerrit.googlesource.com/plugins/replication/+doc/master/src/main/resources/Documentation/config.md">Gerrit 官方文档&lt;/a>&lt;/p>
&lt;p>https://groups.google.com/g/repo-discuss/c/pJHiB1Vki4U&lt;/p>
&lt;h4 id="进入-master-gerrit-1">进入 master Gerrit 1&lt;/h4>
&lt;p>对 master 机器的配置，除特殊说明外均只需普通用户权限&lt;/p>
&lt;div class="sourceCode" id="cb14">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb14-1">&lt;a href="#cb14-1" aria-hidden="true">&lt;/a>&lt;span class="ex">docker&lt;/span> exec -it gerrit-gerrit-2-1 /bin/bash&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="打通-ssh-通讯">打通 ssh 通讯&lt;/h4>
&lt;ol type="1">
&lt;li>配置 ssh 公钥密钥对，用于无密码传输，Gerrit 要求使用 &lt;code>PEM&lt;/code> 的格式&lt;/li>
&lt;/ol>
&lt;div class="sourceCode" id="cb15">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb15-1">&lt;a href="#cb15-1" aria-hidden="true">&lt;/a>&lt;span class="fu">ssh-keygen&lt;/span> -m PEM -t rsa -C &lt;span class="st">&amp;quot;your_email@example.com&amp;quot;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;ol start="2" type="1">
&lt;li>将生成的公钥拷至 slave 服务器的本地用户的 &lt;code>~/.ssh/authorized_keys&lt;/code> （在我们的例子中就是 &lt;code>/var/gerrit/.ssh/authorized_keys&lt;/code>）文件中，详见 &lt;a href="./rsa_ssh/">ssh 免密登录&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Tips: 可以加这个前缀 &lt;code>no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty&lt;/code>&lt;/p>
&lt;ol start="3" type="1">
&lt;li>手动连接 slave 服务器，以添加 slave 服务器的 fingerprint 到 known_hosts&lt;/li>
&lt;/ol>
&lt;p>Tips: 可以用 &lt;code>ssh_config&lt;/code> 来配置细节，另外，在公钥传输完成后，可以将密码登录禁用&lt;/p>
&lt;h4 id="配置-replication.config">配置 &lt;code>replication.config&lt;/code>&lt;/h4>
&lt;div class="sourceCode" id="cb16">&lt;pre class="sourceCode ini">&lt;code class="sourceCode ini">&lt;span id="cb16-1">&lt;a href="#cb16-1" aria-hidden="true">&lt;/a>&lt;span class="co"># $site_path/etc/replication.config&lt;/span>&lt;/span>
&lt;span id="cb16-2">&lt;a href="#cb16-2" aria-hidden="true">&lt;/a>&lt;span class="kw">[remote &amp;quot;gerrit-2&amp;quot;]&lt;/span>&lt;/span>
&lt;span id="cb16-3">&lt;a href="#cb16-3" aria-hidden="true">&lt;/a>&lt;span class="dt">url &lt;/span>&lt;span class="ot">=&lt;/span>&lt;span class="st"> ssh://gerrit@&amp;lt;my_host_ip_addr&amp;gt;:&lt;/span>&lt;span class="dv">22001&lt;/span>&lt;span class="st">/var/gerrit/git/${name}.git&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;!--
```sh
docker cp --archive replication.config gerrit-gerrit-1-1:/var/gerrit/etc/replication.config
```
-->
&lt;p>这里的 URL 就是 clone 时，或者说 push 时的 URL&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;lt;my_host_ip_addr&amp;gt;&lt;/code>：是 host 机的 IP 地址&lt;/li>
&lt;li>&lt;code>22001&lt;/code>：是上面 docker 映射出来的内部的 22 号端口，而不是 Gerrit 的端口&lt;/li>
&lt;li>&lt;code>/var/gerrit/git/${name}.git&lt;/code>：slave 机上的 &lt;code>gerrit&lt;/code> 用户看到的仓库路径。&lt;/li>
&lt;/ul>
&lt;h5 id="重载配置">重载配置&lt;/h5>
&lt;p>master 机这里这里也需要添加上面生成的 ssh key 到 Gerrit 的 admin 用户中，当然你也可以使用本地账户。&lt;/p>
&lt;div class="sourceCode" id="cb17">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb17-1">&lt;a href="#cb17-1" aria-hidden="true">&lt;/a>&lt;span class="co"># 在 gerrit-1 内执行（如果用的是本地账户，则在物理机上执行）&lt;/span>&lt;/span>
&lt;span id="cb17-2">&lt;a href="#cb17-2" aria-hidden="true">&lt;/a>&lt;span class="fu">ssh&lt;/span> -p 29418 admin@127.0.0.1 gerrit plugin reload replication&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="master-触发-replication">master 触发 replication&lt;/h3>
&lt;p>master 机这里用以下命令触发 replication&lt;/p>
&lt;div class="sourceCode" id="cb18">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb18-1">&lt;a href="#cb18-1" aria-hidden="true">&lt;/a>&lt;span class="fu">ssh&lt;/span> -p 29418 admin@127.0.0.1 replication start&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="调试-replication">调试 replication&lt;/h4>
&lt;h5 id="查看-replication-的状态">查看 replication 的状态&lt;/h5>
&lt;div class="sourceCode" id="cb19">&lt;pre class="sourceCode sh">&lt;code class="sourceCode bash">&lt;span id="cb19-1">&lt;a href="#cb19-1" aria-hidden="true">&lt;/a>&lt;span class="fu">ssh&lt;/span> -p 29418 admin@127.0.0.1 replication list --detail&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h5 id="查看-replication-的日志">查看 replication 的日志&lt;/h5>
&lt;pre>&lt;code>cd $site_path
cat logs/replication_log |grep &amp;#39;^\[2025-&amp;#39;&lt;/code>&lt;/pre>
&lt;h3 id="slave-没有权限">slave 没有权限&lt;/h3>
&lt;p>在重启配置完成后，有可能 ssh 到 slave 的 &lt;code>gerrit&lt;/code> 提示 &lt;code>admin@192.168.3.55: Permission denied (publickey).&lt;/code>。&lt;/p>
&lt;p>解决方式是把 replica 关掉，进到 Welcome 网页（可以直接在机器上访问 docker 的 IP + 8080 的端口。点 &lt;code>Install plugins&lt;/code>，点 &lt;code>Done &amp;gt;&amp;gt; Go To Gerrit&lt;/code>。然后重新打开 replica 就可以了。&lt;/p>
&lt;h3 id="slave-重建索引">slave 重建索引&lt;/h3>
&lt;p>如果没有配置 replica，网页上不会刷新更新的仓库，需要用以下命令刷新一下&lt;/p>
&lt;pre>&lt;code>ssh -p 22001 gerrit@&amp;lt;my_host_ip_addr&amp;gt; gerrit index start projects --force&lt;/code>&lt;/pre>
&lt;h2 id="replication-后记">replication 后记&lt;/h2>
&lt;p>对 slave 端如果有 GitHub 等其他可以接收裸 git 的命令的也可以，甚至可能也可以走 Gerrit 提供的端口，只要 Gerrit 端口允许裸推。从我实验的情况来看，Gerrit replication 在连上 slave 服务器时会执行如下命令：&lt;/p>
&lt;pre>&lt;code>-c mkdir -p &amp;#39;/srv/git/gerrit/test-repo.git&amp;#39; &amp;amp;&amp;amp; cd &amp;#39;/srv/git/gerrit/test-repo.git&amp;#39; &amp;amp;&amp;amp; git init --bare &amp;amp;&amp;amp; git symbolic-ref HEAD &amp;#39;refs/heads/master&amp;#39;
-c git-upload-pack &amp;#39;/srv/git/gerrit/All-Projects.git&amp;#39;
-c git-receive-pack &amp;#39;/srv/git/gerrit/All-Projects.git&amp;#39;&lt;/code>&lt;/pre></description></item></channel></rss>